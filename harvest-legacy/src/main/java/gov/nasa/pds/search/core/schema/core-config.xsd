<?xml version="1.0" encoding="UTF-8" ?>

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:jxb="http://java.sun.com/xml/ns/jaxb" jxb:version="2.0">

	<xsd:element name="checkAssociations" type="xsd:boolean" default="false" />
	<xsd:element name="registryObjectType" type="xsd:string" />
	<xsd:element name="registryObjectName" type="xsd:string" />
	<xsd:element name="registryPath" type="xsd:string" />
	<xsd:element name="title" type="xsd:string" />
	<xsd:element name="url" type="xsd:string" />
	<xsd:element name="value" type="xsd:string" />

	<xsd:attribute name="name" type="xsd:string" />
	<xsd:attribute name="type" type="dataType" />
	<xsd:simpleType name="dataType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="required"/>
	    	<xsd:enumeration value="string"/>
	    	<xsd:enumeration value="date"/>
	    	<xsd:enumeration value="integer"/>
	    	<xsd:enumeration value="float"/>
	  	</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:attribute name="priority" type="sourcePriority" />
	<xsd:simpleType name="sourcePriority">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="primary"/>
	    	<xsd:enumeration value="secondary"/>
	  	</xsd:restriction>
	</xsd:simpleType>
	
	<!-- Currently, registry is only support sourceType -->
	<xsd:attribute name="sourceType" type="sourceType" />
	<xsd:simpleType name="sourceType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="registry"/>
	  	</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:attribute name="operator" type="CompareOperator" />
	<xsd:simpleType name="CompareOperator">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="AND"/>
			<xsd:enumeration value="OR"/>
			<xsd:enumeration value="and"/>
			<xsd:enumeration value="or"/>
	  	</xsd:restriction>
	</xsd:simpleType>
	
	<xsd:element name="dataSources" type="DataSources" />
	<xsd:complexType name="DataSources">
		<xsd:sequence>
			<xsd:element ref="source" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:element name="query" type ="Query" />
	<xsd:complexType name="Query">
		<xsd:sequence>
			<xsd:element ref="registryPath" />
			<xsd:element ref="value" />
		</xsd:sequence>
		<xsd:attribute ref="operator" />
	</xsd:complexType>
	
	<xsd:attribute name="append" type="xsd:boolean" />
	<xsd:element name="source" type="DataSource" />
   	<xsd:complexType name="DataSource">
		<xsd:sequence>
			<xsd:element ref="url" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:attribute ref="sourceType" use="required" />
		<xsd:attribute ref="priority" use="required" />
		<!-- If append is true, source urls will be appended to dictionary. Else a new dictionary is created -->
		<xsd:attribute ref="append" use="required" />
	</xsd:complexType>

	<xsd:element name="specification" type="Specification" />
	<xsd:complexType name="Specification">
		<xsd:sequence>
			<xsd:element ref="title" />
			<xsd:element ref="query" maxOccurs="unbounded" />
			<xsd:element ref="dataSources" minOccurs="0" />
			<xsd:element ref="checkAssociations" minOccurs="0" />
		</xsd:sequence>
	</xsd:complexType>
	
	<xsd:attribute name="default" type="xsd:string" />
	<xsd:element name="outputString" type="OutputString" />
	<xsd:element name="field" type="Field" />
	<xsd:complexType name="Field">
		<xsd:sequence>
			<xsd:element ref="registryPath" minOccurs="0" maxOccurs="unbounded" />
			<xsd:element ref="outputString" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute ref="name" use="required" />
		<xsd:attribute ref="type" use="required" />
		<xsd:attribute ref="default" />
	</xsd:complexType>
	
	<xsd:attribute name="format" type="OutputStringFormat" />
	<xsd:complexType name="OutputString">
		<xsd:simpleContent>
			<xsd:extension base="xsd:string">
				<xsd:attribute ref="format" use="required"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	
	<xsd:simpleType name="OutputStringFormat">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="text"/>
			<xsd:enumeration value="url"/>
	  	</xsd:restriction>
	</xsd:simpleType>

	<xsd:element name="indexFields" type="IndexField" />
	<xsd:complexType name="IndexField">
		<xsd:sequence>
			<xsd:element ref="field" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="product" type="Product" />
	<xsd:complexType name="Product">
		<xsd:sequence>
			<xsd:element ref="specification" />
			<xsd:element ref="indexFields" />
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
