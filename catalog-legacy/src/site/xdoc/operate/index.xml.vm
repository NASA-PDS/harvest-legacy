<?xml version="1.0" encoding="UTF-8"?>

<document>
  <properties>
    <title>Operation</title>
    <author email="Michael.Cayanan@jpl.nasa.gov">Michael Cayanan</author>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

  <body>
    <section name="Operation">
      <p>This document describes how to operate the Catalog Tool. The tool has three functions:
      </p>

      <ul>
        <li>Compare a Catalog Submission<br/>
          <p>Comparisons of catalog submissions, either file to file or directory to directory, can be performed with a report detailing the differences.</p>
        </li>
        <li>Validate a Catalog Submission<br/>
          <p>Validation specific to catalog files can be performed with a report detailing the results. In addition, referential integrity checks are performed within the set of catalog files. Details on the types of checks performed can be found in the <a href="index-ref.html">Referential Integrity Checking</a> section. If viewing this document in PDF form, see the appendix for details.</p>
        </li>
        <li>Ingest a Catalog Submission<br/>
          <p>Ingestion into the Registry Service can be performed assuming the user has appropriate permissions.</p>
        </li>
      </ul>

      <p>The following topics can be found in this document:
      </p>

      <ul>
        <li><a href="#Tool_Execution">Tool Execution</a></li>
        <li><a href="#Report_Formats">Report Formats</a></li>
      </ul>

      <p>Note: The command-line examples in this section have been broken into multiple lines for readability. The commands should be reassembled into a single line prior to execution.
      </p>
    </section>

    <section name="Tool Execution">
      <p>Catalog Tool can be executed in various ways. This section describes how to run the tool, as well as its behaviors and caveats.
      </p>

      <subsection name="Command-Line Options">
        <p>Catalog Tool can be run in three modes: compare, validate and ingest. The following tables describe the command-line options available when each mode is enabled.
        </p>

        <p><b>Compare Mode</b></p>

        <p>Setting the <i>m</i> option with <i>compare</i> will enable the tool to run in compare mode. In the compare mode, the following options are valid:
        </p>

        <table>
          <thead>
            <tr>
              <th>Command-Line Option</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>-m, --mode compare
              </td>
              <td>Specifying <i>compare</i> runs the tool in compare mode.
              </td>
            </tr>
            <tr>
              <td>-t, --target &lt;catalogs,URLs,dirs&gt;
              </td>
              <td>Explicitly specify two targets (catalog files, directories, and URLs) to compare. Targets can also be specified implicitly (example: catalog OLDDATASET.CAT, NEWDATASET.CAT).
              </td>
            </tr>
            <tr>
              <td>-r, --report-file &lt;file&gt;
              </td>
              <td>Specify the report file name. Default is standard out.
              </td>
            </tr>
            <tr>
              <td>-L, --local
              </td>
              <td>Do not peform directory recursion on a target directory.
              </td>
            </tr>
            <tr>
              <td>-v, --verbose &lt;1|2|3&gt;
              </td>
              <td>Specify the severity level and above to include in the report: (1=Info, 2=Warning, 3=Error). Default is warning and above (level 2).
              </td>
            </tr>
            <tr>
              <td>-c, --config &lt;file&gt;</td>
              <td>Specify a configuration file to set the default values.</td>
            </tr>
            <tr>
              <td>-h, --help
              </td>
              <td>Display Catalog Tool usage.
              </td>
            </tr>
            <tr>
              <td>-V, --version
              </td>
              <td>Display Catalog Tool version.
              </td>
            </tr> 
          </tbody>
        </table>

        <p><b>Validate Mode</b></p>

        <p>Setting the <i>m</i> option with <i>validate</i> will enable the tool to run in validate mode. In the validate mode, the following options are valid:
        </p>

        <table>
          <thead>
            <tr>
              <th>Command-Line Option</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>-m, --mode validate
              </td>
              <td>Specifying <i>validate</i> runs the tool in validate mode.
              </td>
            </tr>
            <tr>
              <td>-d, --dict &lt;.full file(s)&gt;
              </td>
              <td>Specify the Planetary Science Data Dictionary full file name and any local dictionaries. 
              </td>
            </tr>
            <tr>
              <td>-I, --include &lt;path(s)&gt;
              </td>
              <td>Specify paths to search for files referenced by pointer statements in a catalog file. Separate each path with a comma. Default is to always look in the directory of the catalog file, then search the specified directory paths.
              </td>
            </tr>
            <tr>
              <td>-a, --alias;
              </td>
              <td>Enable aliasing. Allows the tool to properly handle object and element names defined as aliases in the Planetary Science Data Dictionary.
              </td>
            </tr>
            <tr>
              <td>-A, --allrefs &lt;allrefs file&gt;
              </td>
              <td>Specify the allrefs dictionary support file or URL.
              </td>
            </tr>
            <tr>
              <td>-r, --report-file &lt;file&gt;
              </td>
              <td>Specify the report file name. Default is standard out.
              </td>
            </tr>
            <tr>
              <td>-L, --local
              </td>
              <td>Do not perform directory recursion on a target directory.
              </td>
            </tr>
            <tr>
              <td>-t, --target &lt;catalogs,URLs,dirs&gt;
              </td>
              <td>Explicitly specify the target (catalog file, directory, or URL). The target can also be specified implicitly (example: catalog DATASET.CAT).
              </td>
            </tr>
            <tr>
              <td>-v, --verbose &lt;1|2|3&gt;
              </td>
              <td>Specify the severity level and above to include in the report: (1=Info, 2=Warning, 3=Error). Default is warning and above (level 2).
              </td>
            </tr>
            <tr>
              <td>-c, --config &lt;file&gt;</td>
              <td>Specify a configuration file to set the default values.</td>
            </tr>
            <tr>
              <td>-h, --help</td>
              <td>Display Catalog Tool usage.</td>
            </tr>
            <tr>
              <td>-V, --version</td>
              <td>Display Catalog Tool version.</td>
            </tr>
          </tbody>
        </table>

        <p><b>Ingest Mode</b></p>

        <p>Setting the <i>m</i> option with <i>ingest</i> will enable the tool to run in ingest mode. In the ingest mode, the following options are valid:
        </p>

        <table>
          <thead>
            <tr>
              <th>Command-Line Option</th>
              <th>Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>-m, --mode ingest
              </td>
              <td>Specifying <i>ingest</i> runs the tool in ingest mode.
              </td>
            </tr>
            <tr>
              <td>-t, --target &lt;dir, a VOLUME catalog file&gt;
              </td>
              <td>Explicitly specify target (directory, or a VOLUME catalog file) to ingest. Targets can also be specified implicitly (example: CITool -m ingest $CATALOG_DIR).
              </td>
            </tr>
            <tr>
              <td>-u, --user &lt;username&gt;
              </td>
              <td>Specify a username for authentication with the PDS Security Service.
              </td>
            </tr>
            <tr>
              <td>-p, --pass &lt;password&gt;
              </td>
              <td>Specify a password associated with the username.
              </td>
            </tr>
            <tr>
              <td>-s, --serverUrl &lt;URL&gt;</td>
              <td>Specify the URL to the PDS Storage Service.</td>
            </tr>
            <tr>
              <td>-T, --transportUrl &lt;URL&gt;</td>
              <td>Specify the URL to the PDS Product Service.</td>
            </tr>
            <tr>
              <td>-r, --report-file &lt;file&gt;
              </td>
              <td>Specify the report file name. Default is standard out.
              </td>
            </tr>
            <tr>
              <td>-v, --verbose &lt;1|2|3&gt;
              </td>
              <td>Specify the severity level and above to include in the report: (1=Info, 2=Warning, 3=Error). Default is warning and above (level 2).
              </td>
            </tr>
            <tr>
              <td>-k, --keypass &lt;keystore password&gt;
              </td>
              <td>Specify a password of the keystore file.
              </td>
            </tr>
            <tr>
              <td>-c, --config &lt;file&gt;</td>
              <td>Specify a configuration file to set the default values.</td>
            </tr>
            <tr>
              <td>-h, --help
              </td>
              <td>Display Catalog Tool usage.
              </td>
            </tr>
            <tr>
              <td>-V, --version
              </td>
              <td>Display Catalog Tool version.
              </td>
            </tr> 
          </tbody>
        </table>
      </subsection>

      <subsection name="Execute Catalog Tool">
        <p>This section demonstrates execution of the tool using the command-line options. The examples below execute the tool via the batch/shell script. Alternate methods for executing the tool can be found in the <a href="#Tool_Setup">Tool Setup</a> section.
        </p>

        <p><b>Compare Mode</b></p>

        <p>In compare mode, the tool can be executed as follows:
        </p>

        <ul>
          <li>Comparing Two Catalog Files<br/>
            <p>The following command demonstrates how to compare a source catalog file <i>$HOME/DIR1/DATASET.CAT</i> with a target catalog file <i>$HOME/DIR2/DATASET.CAT</i>: 
            </p>

            <source>
% catalog $HOME/DIR1/DATASET.CAT, $HOME/DIR2/DATASET.CAT -m compare
            </source>
          </li>
          <li>Comparing Two Catalog Directories<br/>
            <p>The following command demonstrates how to compare a source directory, <i>$HOME/DIR1</i>, containing a set of catalog files with a target directory, <i>$HOME/DIR2</i>, containing another set of catalog files.
            </p>

            <source>
% catalog $HOME/DIR1, $HOME/DIR2 -m compare
            </source>

            <p>In this example, the tool will look for files with matching file names between the source and target directory before doing a comparison. So, if a <i>DATASET.CAT</i> file is found in directory <i>$HOME/DIR1</i>, a <i>DATASET.CAT</i> file needs to be found in directory <i>$HOME/DIR2</i>, and so forth.
            </p>
          </li>
          <li>Writing a Compare Report to File<br/>
            <p>In the first two examples above, the output report is written to standard out. The following command demonstrates how to write the report to a file named <i>report.txt</i>: 
            </p>

            <source>
% catalog $HOME/DIR1/DATASET.CAT, $HOME/DIR2/DATASET.CAT -m compare -r report.txt
            </source>
          </li> 
        </ul> 
          
        <p><b>Validate Mode</b></p>

        <p>In validate mode, the tool can be executed as follows:
        </p>

        <ul>
          <li>Validate a Single Catalog File<br/>
            <p>The following command demonstrates how to validate a single catalog file <i>DATASET.CAT</i> against a data dictionary <i>pdsdd.full</i>:
            </p>

            <source>
% catalog DATASET.CAT -m validate -d pdsdd.full
            </source>
          </li>
          <li>Validate a Directory of Catalog Files<br/>
            <p>The following command demonstrates how to validate a directory <i>$HOME/DIR</i> containing a set of catalog files against a data dictionary <i>pdsdd.full</i>:
            </p>

            <source>
% catalog $HOME/DIR -m validate -d pdsdd.full
            </source>
          </li>

          <li>Checking for Referenced Files in Different Locations
            <p>If a catalog file contains a pointer statement that references a file, the tool will always assume it is in the same location as the catalog file. If it cannot be found there, then the tool will look for that referenced file in the paths specified by the include directories option.
            </p>

            <p>The following command demonstrates the validation of a catalog file that contains pointer statements to files located in a directory called <i>CATALOG</i>:
            </p>

            <source>
% catalog VOLDESC.CAT -m validate -d pdsdd.full -I $HOME/CATALOG
            </source>
          </li>

          <li>Perform Referential Integrity Check with the Allrefs File<br/>
            <p>The allrefs dictionary support file ensures that the reference citations in the <i>REFS.CAT</i> file are consistent with what is currently in the PDS database.
            </p>

            <p>The following command demonstrates how to specify an allrefs dictionary support file, <i>allrefs.out</i>, to validate and do a complete referential integrity check on references from a set of catalog files in a directory <i>$HOME/DIR</i>.
            </p>

            <source>
% catalog $HOME/DIR -m validate -d pdsdd.full -A allrefs.out
            </source>
          </li>
          <li>Writing the Validation Report to File<br/>
            <p>The following command demonstrates how to write a validation report to a file named <i>report.txt</i>:
            </p>

            <source>
% catalog $HOME/DIR -m validate -d pdsdd.full -A allrefs.out -r report.txt
            </source>
          </li>
        </ul>

        <p><b>Ingest Mode</b></p>

        <p>In ingest mode, the tool can be executed as follows:
        </p>

        <ul>
          <li>Ingest with a VOLUME Catalog File<br/>
            <p>The following command demonstrates how to ingest a VOLUME catalog file <i>voldesc.cat</i> as a user <i>tempuser</i> with a password <i>temppass</i> using the storage service on <i>http://pdsdev.jpl.nasa.gov:9000</i> and the product service on <i>http://pdsdev.jpl.nasa.gov:8080/product</i>.
            </p>

            <source>
% catalog voldesc.cat -m ingest -u tempuser -p temppass \
-s http://pdsdev.jpl.nasa.gov:9000 -T http://pdsdev.jpl.nasa.gov:8080/product
            </source>
          </li>

          <li>Ingest a Directory of archive volume<br/>
            <p>The following command demonstrates how to ingest a directory <i>$HOME/DIR</i> containing a set of catalog files as a user <i>tempuser</i> with a password <i>temppass</i> using the storage service on <i>http://pdsdev.jpl.nasa.gov:9000</i> and the transport service on <i>http://pdsdev.jpl.nasa.gov:8080</i>.
            </p>

            <source>
% catalog $HOME/DIR -m ingest -u tempuser -p temppass \
-s http://pdsdev.jpl.nasa.gov:9000 -T http://pdsdev.jpl.nasa.gov:8080/product
            </source>
          </li>
        </ul>

        <p><b>Changing Tool Behaviors Using a Configuration File</b></p>

        <p>A configuration file can be passed to the tool to change its default behaviors. This provides a way to use the tool with a single option. For more details on how to setup the configuration file see the <a href="#Using_a_Configuration_File">Using a Configuration File</a> section.
        </p>

        <p>The following command demonstrates how to run the tool using a configuration file:
        </p>

        <source>
% catalog -c config.cfg
        </source>
      </subsection>

      <subsection name="Using a Configuration File">
        <p>A configuration file is used to set the default behaviors of the tool. It consists of a text file made up of keyword/value pairs. The configuration file follows the syntax of the stream parsed by the Java Properties.load(java.io.InputStream) method. The following rules apply to the content of configuration files:
        </p>

        <ul>
          <li>Blank lines and lines which begin with the hash character "#" are ignored.
          </li>
          <li>Values may be separated on different lines if a backslash is placed at the end of the line that continues below.
          </li>
          <li>Escape sequences for special characters like a line feed, a tabulation or a unicode character, are allowed in the values and are specified in the same notation as those used in Java strings (e.g. \n, \t, \r).
          </li>
          <li>Since backslashes (\) have special meanings in a configuration file, keyword values that contain this character will not be interpreted properly by Catalog Tool even if it is surrounded by quotes. A common example would be a Windows path name (e.g. c:\VTT_EN_1-1\target). Use the forward slash character instead (c:/VTT_EN_1-1/target) or escape the backslash character (c:\\VTT_EN_1-1\\target).
          </li>
        </ul>

        <p>Note: Any option specified on the command-line takes precedence over any equivalent settings placed in the configuration file.
        </p>

        <p>The following table contains valid keywords that can be specified in the configuration file when running in compare mode:</p>

        <table>
          <thead>
            <tr>
              <th>Property Keyword</th>
              <th>Associated Option</th>
              <th>Valid Value(s)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>citool.mode</td>
              <td>-m</td>
              <td>Specify <i>compare</i> to run the tool in compare mode.</td>
            </tr>

            <tr>
              <td>citool.targets</td>
              <td>-t</td>
              <td>Specify two targets (catalog files, directories, and/or URLs) to compare.</td>
            </tr>

            <tr>
              <td>citool.report</td>
              <td>-r</td>
              <td>Specify the report file name. Do not specify this property key if writing to standard out.</td>
            </tr>

            <tr>
              <td>citool.recurse</td>
              <td>-L</td>
              <td>Set to 'false' to disable directory recursion on a target directory. Set to 'true' otherwise or do not specify this property key.</td>
            </tr>

            <tr>
              <td>citool.verbose</td>
              <td>-v</td>
              <td>Specify the severity level and above to include in the report (1=info, 2=warning, 3=error). Default is warnings and above (level 2).</td>
            </tr>
          </tbody>
        </table>

        <p>The following table contains valid keywords that can be specified in the configuration file when running in validate mode:</p>

        <table>
          <thead>
            <tr>
              <th>Property Keyword</th>
              <th>Associated option</th>
              <th>Valid Value(s)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>citool.mode</td>
              <td>-m</td>
              <td>Specify <i>validate</i> to run the tool in validate mode.</td>
            </tr>

            <tr>
              <td>citool.targets</td>
              <td>-t</td>
              <td>Specify a target (catalog file, directory, or URL) to validate.</td>
            </tr>

            <tr>
              <td>citool.dictionaries</td>
              <td>-d</td>
              <td>Specify the Planetary Science Data Dictionary full file name and any local dictionaries.</td>
            </tr>

            <tr>
              <td>citool.includepaths</td>
              <td>-I</td>
              <td>Specify paths to search for files referenced by pointer statements in a catalog file.</td>
            </tr>

            <tr>
              <td>citool.recurse</td>
              <td>-L</td>
              <td>Set to 'false' to disable directory recursion on a target directory. Set to 'true' otherwise or do not specify this property key.</td>
            </tr>

            <tr>
              <td>citool.alias</td>
              <td>-a</td>
              <td>Set to <i>true</i> to enable aliasing.</td>
            </tr>

            <tr>
              <td>citool.allrefs</td>
              <td>-A</td>
              <td>Specify the <i>'allrefs'</i> dictionary file or URL.</td>
            </tr>

            <tr>
              <td>citool.report</td>
              <td>-r</td>
              <td>Specify the report file name. Do not specify this property key if writing to standard out.</td>
            </tr>

            <tr>
              <td>citool.verbose</td>
              <td>-v</td>
              <td>Specify the severity level and above to include in the report (1=info, 2=warning, 3=error). Default is warnings and above (level 2).</td>
            </tr>
          </tbody>
        </table>

        <p>The following table contains valid keywords that can be specified in the configuration file when running in ingest mode:</p>

        <table>
          <thead>
            <tr>
              <th>Property Keyword</th>
              <th>Associated option</th>
              <th>Valid Value(s)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>citool.mode</td>
              <td>-m</td>
              <td>Specify <i>ingest</i> to run the tool in ingest mode.</td>
            </tr>

            <tr>
              <td>citool.targets</td>
              <td>-t</td>
              <td>Specify targets (catalog files, directories, and URLs) to ingest.</td>
            </tr>

            <tr>
              <td>citool.user</td>
              <td>-u</td>
              <td>Specify the username for authentication with the PDS Security Service.</td>
            </tr>

            <tr>
              <td>citool.pass</td>
              <td>-p</td>
              <td>Specify the password associated with the username.</td>
            </tr>

            <tr>
              <td>citool.serverUrl</td>
              <td>-s</td>
              <td>Specify the URL to the Storage Service.</td>
            </tr>

            <tr>
              <td>citool.transportUrl</td>
              <td>-T</td>
              <td>Specify the URL to the Product Service.</td>
            </tr>

            <tr>
              <td>citool.keypass</td>
              <td>-k</td>
              <td>Specify a password of the keystore file.</td>
            </tr>

            <tr>
              <td>citool.report</td>
              <td>-r</td>
              <td>Specify the report file name. Do not specify this property key if writing to standard out.</td>
            </tr>

            <tr>
              <td>citool.recurse</td>
              <td>-L</td>
              <td>Set to 'false' to disable directory recursion on a target directory. Set to 'true' otherwise or do not specify this property key.</td>
            </tr>
            
            <tr>
              <td>citool.verbose</td>
              <td>-v</td>
              <td>Specify the severity level and above to include in the report (1=info, 2=warning, 3=error). Default is warnings and above (level 2).</td>
            </tr>
          </tbody>
        </table>

        <p>The following example demonstrates how to set a configuration file:
        </p>

        <source>
# This is a Catalog Tool configuration file

citool.mode         = validate
citool.targets      = ./TEST_DIR
citool.report       = report.txt
citool.dictionaries = pdsdd.full
        </source>

        <p>This is equivalent to running the tool with the following option options:
        </p>

        <source>
-t ./TEST_DIR -m validate -r report.txt -d pdsdd.full
        </source>

        <p>The following example demonstrates how to set a configuration file with multiple values for a property key:
        </p>

        <source>
# This is a Catalog Tool configuration file with multiple values

citool.mode         = compare
citool.targets      = DIR
citool.dictionaries = pdsdd.full, localdd.full
        </source>

        <p>This is equivalent to running the tool with the following options:
        </p>

        <source>
-t DIR -m compare -d pdsdd.full, localdd.full
        </source>

        <p>The following example demonstrates how to set a configuration file with multiple values that span across multiple lines:
        </p>

        <source>
# This is a Catalog Tool configuration file with multiple values

citool.mode         = compare
citool.targets      = DIR
citool.dictionaries = pdsdd.full, \
                      localdd.full
        </source>

        <p>The following example demonstrates how to override a setting in the configuration file.
        </p>

        <p>Suppose the configuration file <i>config.cfg</i> is defined as follows:
        </p>

        <source>
# This is a Catalog Tool configuration file

citool.mode         = validate
citool.targets      = ./TEST_DIR
citool.dictionaries = pdsdd.full
        </source>

        <p>To use another dictionary instead like <i>mypdsdd.full</i>, then the following command demonstrates how to perform this behavior change:
        </p>

        <source>
% catalog -c config.cfg -d mypdsdd.full
        </source>
      </subsection>
    </section>

    <section name="Report Formats">
      <p>This section describes the contents of the Catalog Tool report formats. The links below detail the results. If viewing this document in PDF form, see the appendix for the actual examples.
      </p>

      <p>The tool has a different report format depending on the Catalog Tool mode. 
      </p>

      <subsection name="Compare Report">
        <p>In a <a href="reports/index-compare.html">compare</a> report, the location, severity, and textual representation of the differences between a source and target catalog file are shown. The differences being reported are about the target catalog file with respect to the source. A 'SAME' or 'DIFFERENT' keyword is displayed next to each target to indicate when a target file is identical or different, respectively, against its source.
        </p>
      </subsection>

      <subsection name="Validate Report">
        <p>In a <a href="reports/index-validate.html">validate</a> report, the location, severity, and textual description of each detected anomaly is reported. A 'PASS', 'FAIL', or 'SKIP' keyword is displayed next to each file to indicate when a file has passed, failed, or skipped PDS validation, respectively. In addition, anomalies against the referential integrity of the catalog files are reported.
        </p>
      </subsection>

      <subsection name="Ingest Report">
        <p>In a <a href="reports/index-ingest.html">ingest</a> report, the location, severity, and textual description of each detected anomaly is reported. Completion or failure of each catalog file ingestion is reported. Detailed information is displayed when the catalog ingestion has failed.
        </p>
      </subsection>
    </section>
  </body>
</document>
